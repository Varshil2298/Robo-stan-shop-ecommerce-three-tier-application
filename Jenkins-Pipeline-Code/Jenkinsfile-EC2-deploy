pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_DEFAULT_REGION = 'ap-south-1'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'feature/test', credentialsId: 'GITHUB', url: 'https://github.com/volley123/three-tier-architecture-demo.git'
            }
        }
        stage('Deploy web app to EC2') {
            when {
               branch 'feature/*'
            }
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ec2-creds']]) {

                    sshagent(['aws-dev-deploy-ec2-instance']) {
                        sh '''                
                            LOCAL_PATH=/Users/varshildesai/DevOps-projects/github-code/robo-stan-shop-ecommerce-three-tier-application
                            REMOTE_PATH=/home/ubuntu/app
               
                           scp -o StrictHostKeyChecking=no -r $LOCAL_PATH/* ubuntu@13.235.244.119:$REMOTE_PATH/
                           ssh -o StrictHostKeyChecking=no ubuntu@13.235.244.119 << EOF
                           cd $REMOTE_PATH

                           # Deploy the application using the docker-compose.yaml file
                           docker-compose -f docker-compose.yaml pull
                           docker-compose -f docker-compose.yaml up -d
                        EOF
                    '''
        }
    }
   }
  }  
 }
}   