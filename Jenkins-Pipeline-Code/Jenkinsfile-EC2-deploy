pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_DEFAULT_REGION = 'ap-south-1'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'feature/test', credentialsId: 'GITHUB', url: 'https://github.com/Varshil2298/robo-stan-shop-ecommerce-three-tier-application.git'
            }
        }
        stage('Deploy web app to EC2') {
            when {
               branch 'feature/*'
            }
            steps {
    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ec2-creds']]) {
        sshagent(['aws-dev-deploy-ec2-instance']) {
            sh ''' 
                REMOTE_PATH=/home/ubuntu/robo-stan-shop-ecommerce-three-tier-application
                BRANCH_NAME=feature/test

                ssh -o StrictHostKeyChecking=no ubuntu@43.205.217.146 << EOF
                if [ ! -d "$REMOTE_PATH" ]; then
                    git clone -b $BRANCH_NAME https://github.com/Varshil2298/robo-stan-shop-ecommerce-three-tier-application.git $REMOTE_PATH
                else
                    cd $REMOTE_PATH
                    git fetch origin
                    git checkout $BRANCH_NAME
                    git pull origin $BRANCH_NAME
                fi

                cd $REMOTE_PATH
                docker-compose -f docker-compose.yaml pull
                docker-compose -f docker-compose.yaml up -d               
            EOF
            '''
        }
      }
    }
   }
 }
}
